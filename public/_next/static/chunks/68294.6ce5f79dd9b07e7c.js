"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[68294],{68294:function(e,a,t){t.d(a,{connectSmartWallet:function(){return T},disconnectSmartWallet:function(){return $}});var r=t(57040),i=t(60689),n=t(11692),s=t(23911);let o="0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789",c=e=>`https://${e.id}.bundler.thirdweb.com/`,d=e=>`https://${e.id}.bundler.thirdweb.com/v2`;var l=t(99910),u=t(75403),p=t(52749);let f=()=>{let e=BigInt(Math.floor(4294967296*Math.random())),a=BigInt(Math.floor(4294967296*Math.random())),t=BigInt(Math.floor(4294967296*Math.random())),r=BigInt(Math.floor(4294967296*Math.random())),i=BigInt(Math.floor(4294967296*Math.random())),n=BigInt(Math.floor(4294967296*Math.random()));return e<<BigInt(160)|a<<BigInt(128)|t<<BigInt(96)|r<<BigInt(64)|i<<BigInt(32)|n},m=()=>BigInt((0,r.zo)([(0,u.eC)(f()),"0x0000000000000000"]));function y(e){return Object.fromEntries(Object.entries(e).map(([e,a])=>[e,(0,p.v)(a)?a:(0,u.NC)(a)]))}async function h(e){let{userOp:a,options:t}=e;if(t.overrides?.paymaster)return t.overrides?.paymaster(a);let r=t.client,i=d(t.chain),n=t.overrides?.entrypointAddress??o,s=(0,l.NX)(r),c=await s(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:"pm_sponsorUserOperation",params:[y(a),n]})}),p=await c.json();if(!c.ok){let e=p.error||c.statusText,a=p.code||"UNKNOWN";throw Error(`Paymaster error: ${e}
Status: ${c.status}
Code: ${a}`)}if(p.result)return"string"==typeof p.result?{paymasterAndData:p.result}:{paymasterAndData:p.result.paymasterAndData,verificationGasLimit:p.result.verificationGasLimit?(0,u.y_)(p.result.verificationGasLimit):void 0,preVerificationGas:p.result.preVerificationGas?(0,u.y_)(p.result.preVerificationGas):void 0,callGasLimit:p.result.callGasLimit?(0,u.y_)(p.result.callGasLimit):void 0};{let e=p.error?.message||p.error||c.statusText||"unknown error";throw Error(`Paymaster error from ${i}: ${e}`)}}async function v(e){return G({...e,operation:"eth_sendUserOperation",params:[y(e.userOp),e.options.overrides?.entrypointAddress??o]})}async function w(e){let a=await G({...e,operation:"eth_estimateUserOperationGas",params:[y(e.userOp),e.options.overrides?.entrypointAddress??o]});return{preVerificationGas:(0,u.y_)(a.preVerificationGas),verificationGas:(0,u.y_)(a.verificationGas),verificationGasLimit:(0,u.y_)(a.verificationGasLimit),callGasLimit:(0,u.y_)(a.callGasLimit)}}async function g(e){let a=await G({...e,operation:"eth_getUserOperationReceipt",params:[e.userOpHash]});return a?.receipt}async function G(e){let{options:a,operation:t,params:r}=e,i=a.overrides?.bundlerUrl??c(a.chain),n=(0,l.NX)(a.client),s=await n(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:t,params:r})}),o=await s.json();if(!s.ok||o.error){let e=o.error||s.statusText;"object"==typeof e&&(e=JSON.stringify(e));let a=o.code||"UNKNOWN";throw Error(`${t} error: ${e}
Status: ${s.status}
Code: ${a}`)}return o.result}var A=t(26182),b=t(21690);async function L(e,a){if(a.overrides?.predictAddress)return a.overrides.predictAddress(e);let t=a.overrides?.accountAddress||a.personalAccountAddress;if(!t)throw Error("Account address is required to predict the smart wallet address.");let r=(0,u.$G)(a.overrides?.accountSalt??"");return(0,A.readContract)({contract:e,method:"function getAddress(address, bytes) returns (address)",params:[t,r]})}var x=t(83159),P=t(83218),M=t(24951),O=t(39430);async function D(e){let{factoryContract:a,accountContract:t,executeTx:r,options:o}=e,c=await (0,i.isContractDeployed)(t)?"0x":await N({factoryContract:a,options:o}),d=await (0,n.encode)(r),{maxFeePerGas:l,maxPriorityFeePerGas:u}=r;if(!l||!u){let e=await (0,s.E)(a.client,a.chain);u||(u=e.maxPriorityFeePerGas??void 0),l||(l=e.maxFeePerGas??void 0)}let p=m(),f={sender:t.address,nonce:p,initCode:c,callData:d,maxFeePerGas:await (0,x.q)(l)??0n,maxPriorityFeePerGas:await (0,x.q)(u)??0n,callGasLimit:0n,verificationGasLimit:0n,preVerificationGas:0n,paymasterAndData:"0x",signature:"0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"};if(o.gasless){let e=await h({userOp:f,options:o}),a=e.paymasterAndData;if(a&&"0x"!==a&&(f.paymasterAndData=a),e.callGasLimit&&e.verificationGasLimit&&e.preVerificationGas)f.callGasLimit=e.callGasLimit,f.verificationGasLimit=e.verificationGasLimit,f.preVerificationGas=e.preVerificationGas;else{let e=await w({userOp:f,options:o});if(f.callGasLimit=e.callGasLimit,f.verificationGasLimit=e.verificationGasLimit,f.preVerificationGas=e.preVerificationGas,a&&"0x"!==a){let e=await h({userOp:f,options:o});e.paymasterAndData&&"0x"!==e.paymasterAndData&&(f.paymasterAndData=e.paymasterAndData)}}}else{let e=await w({userOp:f,options:o});f.callGasLimit=e.callGasLimit,f.verificationGasLimit=e.verificationGasLimit,f.preVerificationGas=e.preVerificationGas}return{...f,signature:"0x"}}async function B(e){let{userOp:a,options:t}=e,r=function(e){let{userOp:a,entryPoint:t,chainId:r}=e,i=(0,P.w)(a.initCode),n=(0,P.w)(a.callData),s=(0,P.w)(a.paymasterAndData),o=(0,O.encodeAbiParameters)([{type:"address"},{type:"uint256"},{type:"bytes32"},{type:"bytes32"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[a.sender,a.nonce,i,n,a.callGasLimit,a.verificationGasLimit,a.preVerificationGas,a.maxFeePerGas,a.maxPriorityFeePerGas,s]),c=(0,O.encodeAbiParameters)([{type:"bytes32"},{type:"address"},{type:"uint256"}],[(0,P.w)(o),t,BigInt(r)]);return(0,P.w)(c)}({userOp:a,entryPoint:t.overrides?.entrypointAddress||o,chainId:t.chain.id});if(t.personalAccount.signMessage){let e=await t.personalAccount.signMessage({message:{raw:(0,M.nr)(r)}});return{...a,signature:e}}throw Error("signMessage not implemented in signingAccount")}async function N(e){let{factoryContract:a,options:t}=e,i=function(e){let{factoryContract:a,options:t}=e;return t.overrides?.createAccount?t.overrides.createAccount(a):(0,b.A)({contract:a,method:"function createAccount(address, bytes) returns (address)",params:[t.overrides?.accountAddress||t.personalAccount.address,(0,u.$G)(t.overrides?.accountSalt??"")]})}({factoryContract:a,options:t});return(0,r.zo)([a.address,await (0,n.encode)(i)])}var _=t(57621),I=t(70681);let C=new WeakMap,V=new WeakMap;async function T(e,a,t){let{personalAccount:r,client:i,chain:n}=a;if(!r)throw Error("Personal wallet does not have an account");let s=n??t.chain,o=t.factoryAddress,c=(0,_.u)({client:i,address:o,chain:s}),d=await L(c,{personalAccountAddress:r.address,...t}),l=(0,_.u)({client:i,address:d,chain:s}),u=await E({...t,personalAccount:r,accountContract:l,factoryContract:c,client:i});return C.set(r,e),V.set(e,r),[u,s]}async function $(e){let a=V.get(e);a&&(C.delete(a),V.delete(e))}async function E(e){let{accountContract:a,factoryContract:r}=e,i={address:a.address,async sendTransaction(t){let i=function(e){let{accountContract:a,options:t,transaction:r}=e;return t.overrides?.execute?t.overrides.execute(a,r):(0,b.A)({contract:a,method:"function execute(address, uint256, bytes)",params:[r.to||"",r.value||0n,r.data||"0x"]})}({accountContract:a,options:e,transaction:t});return S({factoryContract:r,accountContract:a,executeTx:i,options:e})},async sendBatchTransaction(t){let i=function(e){let{accountContract:a,options:t,transactions:r}=e;return t.overrides?.executeBatch?t.overrides.executeBatch(a,r):(0,b.A)({contract:a,method:"function executeBatch(address[], uint256[], bytes[])",params:[r.map(e=>e.to||""),r.map(e=>e.value||0n),r.map(e=>e.data||"0x")]})}({accountContract:a,options:e,transactions:t});return S({factoryContract:r,accountContract:a,executeTx:i,options:e})},async signMessage({message:r}){let n;let[{isContractDeployed:s},{readContract:o},{encodeAbiParameters:c},{hashMessage:d},{checkContractWalletSignature:l}]=await Promise.all([Promise.resolve().then(t.bind(t,60689)),Promise.resolve().then(t.bind(t,26182)),Promise.resolve().then(t.bind(t,39430)),t.e(31445).then(t.bind(t,31445)),t.e(3185).then(t.bind(t,3185))]);await s(a)||(console.log("Account contract not deployed yet. Deploying account before signing message"),await k({options:e,account:i,accountContract:a}));let u=d(r),p=!1;try{await o({contract:a,method:"function getMessageHash(bytes32 _hash) public view returns (bytes32)",params:[u]}),p=!0}catch(e){}if(p){let t=c([{type:"bytes32"}],[u]);n=await e.personalAccount.signTypedData({domain:{name:"Account",version:"1",chainId:e.chain.id,verifyingContract:a.address},primaryType:"AccountMessage",types:{AccountMessage:[{name:"message",type:"bytes"}]},message:{message:t}})}else n=await e.personalAccount.signMessage({message:r});if(await l({contract:a,message:r,signature:n}))return n;throw Error("Unable to verify signature on smart account, please make sure the smart account is deployed and the signature is valid.")},signTypedData:async a=>e.personalAccount.signTypedData(a),estimateGas:async e=>0n};return i}async function k(e){let{options:a,account:r,accountContract:i}=e,[{sendTransaction:n},{waitForReceipt:s},{prepareTransaction:o}]=await Promise.all([Promise.resolve().then(t.bind(t,6094)),Promise.resolve().then(t.bind(t,59337)),Promise.resolve().then(t.bind(t,71316))]),c=o({client:a.client,chain:a.chain,to:i.address,value:0n});return s(await n({transaction:c,account:r}))}async function S(e){let{factoryContract:a,accountContract:t,executeTx:r,options:i}=e,n=await D({factoryContract:a,accountContract:t,executeTx:r,options:i}),s=await B({options:i,userOp:n}),o=await v({options:i,userOp:s}),c=0,d=new Promise((e,a)=>{let t=(0,I.q)({chain:i.chain,client:i.client,onNewBlockNumber:async()=>{++c>=30&&(t(),a("Max attempts reached without finding a receipt for userOp: "+o));let r=await g({options:i,userOpHash:o});r&&(t(),e(r.transactionHash))}})});return{client:i.client,chain:i.chain,transactionHash:await d}}}}]);